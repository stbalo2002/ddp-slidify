filter(year == "1990" | year == "2000" | year == "2010" | year == "2015") %>%
slice(1:20)
matDeath_plot1 <- matDeath %>%
as.data.frame(matDeath) %>%
filter(year == "1990")
mat1 <- ggplot(matDeath_plot1, aes(x = country, y = maternalDeaths, label = position)) +
geom_bar(stat = "identity", width = 0.2, fill = "lightblue") +
coord_flip(expand = FALSE) + scale_x_discrete(limits = matDeath_plot1$country) +
scale_y_continuous(limits = c(0, 160000)) + theme_minimal()
mat1 <- ggplotly(mat1)
matDeath_plot2 <- matDeath %>%
as.data.frame(matDeath) %>%
filter(year == "2000")
mat2 <- ggplot(matDeath_plot2, aes(x = country, y = maternalDeaths, label = position)) +
geom_bar(stat = "identity", width = 0.2, fill = "lightblue") +
coord_flip(expand = FALSE) + scale_x_discrete(limits = matDeath_plot2$country) +
scale_y_continuous(limits = c(0, 160000)) + theme_minimal()
mat2 <- ggplotly(mat2)
matDeath_plot3 <- matDeath %>%
as.data.frame(matDeath) %>%
filter(year == "2010")
mat3 <- ggplot(matDeath_plot3, aes(x = country, y = maternalDeaths, label = position)) +
geom_bar(stat = "identity", width = 0.2, fill = "lightblue") +
coord_flip(expand = FALSE) + scale_x_discrete(limits = matDeath_plot3$country) +
scale_y_continuous(limits = c(0, 160000)) + theme_minimal()
mat3 <- ggplotly(mat3)
matDeath_plot4 <- matDeath %>%
as.data.frame(matDeath) %>%
filter(year == "2015")
mat4 <- ggplot(matDeath_plot4, aes(x = country, y = maternalDeaths, label = position)) +
geom_bar(stat = "identity", width = 0.2, fill = "lightblue") +
coord_flip(expand = FALSE) + scale_x_discrete(limits = matDeath_plot4$country) +
scale_y_continuous(limits = c(0, 160000)) + theme_minimal()
mat4 <- ggplotly(mat4)
plots2 <- layout(
subplot(mat1, mat2, mat3, mat4, nrows = 2, margin = 0.08),
xaxis = list(title = "maternal deaths (1990)"),
xaxis2 = list(title = "maternal deaths (2000)"),
xaxis3 = list(title = "maternal deaths (2010)"),
xaxis4 = list(title = "maternal deaths (2015)"),
yaxis = list(title = "country"),
yaxis3 = list(title = "country"),
title = "Top 20 Countries with the highest maternal deaths",
titlefont = list(size = 17)
)
plots2
data("popF")  # loads the female population data from the wp2015 packages #
# next I select columns for countries, country code and age for year 2015 only #
womenpop <- popF %>%
select(country, country_code, age, `2015`) %>%
spread(age, `2015`) %>%
mutate(reprodAge = `15-19` + `20-24` + `25-29` + `30-34` + `35-39` + `40-44` + `45-49`) %>%
mutate(year = "2015") %>%
transform(reprodAge = reprodAge * 1000) %>%
select(country, year, reprodAge)
womenpop$country <- as.character(womenpop$country)
# here, I process maternal deaths by country before merging maternal deaths and reproductive age group data #
deathpop <- matDeaths %>%
rename(maternalDeaths = SH.MMR.DTHS) %>%
select(country, year, region, maternalDeaths) %>%
filter(year == "2015") %>%
transform(maternalDeaths = maternalDeaths / 1000)
deathpop$year <- as.character(deathpop$year)
deathpop$country <- as.character(deathpop$country)
joinedData <- left_join(womenpop, deathpop, by= c("country", "year"))
joinedData <- drop_na(joinedData) %>%
filter(reprodAge > 1000000 & maternalDeaths > 0.1) %>%  #selects only countries with reproductive age group greater than 1million and maternal deaths greater than 100 #
arrange(desc(maternalDeaths)) %>%
slice(-(1))
# next, I rename the continents to make it less cumbersome #
joinedData$region <- factor(joinedData$region,
levels = c(
"Aggregates",
"East Asia & Pacific (all income levels)",
"Europe & Central Asia (all income levels)",
"Latin America & Caribbean (all income levels)",
"Middle East & North Africa (all income levels)",
"North America",
"South Asia",
"Sub-Saharan Africa (all income levels)"
),
labels = c(
"Aggregates",
"East Asia & Pacific",
"Europe & Central Asia",
"Latin America & Caribbean",
"Middle East & North Africa",
"North America",
"South Asia",
"Sub-Saharan Africa"
)
)
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~country, sizes = c(500, 13000), type = "scatter", mode = "markers", color = ~region, alpha = 0.5) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
) %>%
add_trace(x = c(-20, 80), y = c(-20, 80), mode = "lines",
line = list(
color = "rgba(60, 60, 60, 0.5)",
dash = "dashed",
width = 0.5
), showlegend = FALSE)
j1
sessionInfo()
class(joinedData$country)
help(package = plotly)
plot_ly(x = ~rnorm(100)) %>% add_histogram()
plot_ly(x = ~LETTERS, y = ~LETTERS) %>% add_histogram2d()
z <- as.matrix(table(LETTERS, LETTERS))
plot_ly(x = ~LETTERS, y = ~LETTERS, z = ~z) %>% add_histogram2d()
plot_ly(MASS::geyser, x = ~waiting, y = ~duration) %>%
add_histogram2dcontour()
plot_ly(z = ~volcano) %>% add_heatmap()
plot_ly(z = ~volcano) %>% add_contour()
plot_ly(mtcars, x = ~factor(vs), y = ~mpg) %>% add_boxplot()
plot_ly(z = ~volcano) %>% add_surface()
plot_ly(x = c(0, 0, 1), y = c(0, 1, 0), z = c(0, 0, 0)) %>% add_mesh()
plot_ly(x = c(0, 0, 1), y = c(0, 1, 0), z = c(0, 0, 0)) %>% add_mesh()
plot_ly(x = c(0, 0, 1), y = c(0, 1, 0), z = c(0, 0, 0)) %>% add_mesh()
library(plotly)
library(MASS)
library(plotly.js)
covmat <- matrix(c(0.8, 0.4, 0.3, 0.8), nrow = 2, byrow = T)
df <- mvrnorm(n = 10000, c(0,0), Sigma = covmat)
df <- as.data.frame(df)
colnames(df) <- c("x", "y")
p <- plot_ly(df, x = ~x, y = ~y, alpha = 0.3)
p
p <- plot_ly(df, x = ~x, y = ~y, alpha = 0.3) %>%
add_markers(marker = list(line = list(color = "black", width = 1)))
p
j10 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths) %>% add_trace(size = ~reprodAge, type = "scatter")
j10
j10 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths) %>% add_trace(size = ~reprodAge, type = "scatter", mode = "markers")
j10
j10 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths) %>% add_trace(size = ~reprodAge, type = "scatter") %>% add_markers(marker = list(line = list(color = "white", width = 1)))
j10
j10 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths) %>% add_trace(size = ~reprodAge, type = "scatter", mode = "markers") %>% add_markers(marker = list(line = list(color = "white", width = 1)))
j10
j10 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths) %>% add_trace(size = ~reprodAge, type = "scatter", mode = "markers")
j10
j10 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths) %>% add_trace(size = ~reprodAge, type = "scatter", mode = "markers")
j10 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths) %>% add_trace(size = ~reprodAge, type = "scatter", mode = "markers") %>% add_markers(marker = list(line = list(color = "white", width = 1)))
j10
j10 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths) %>% add_trace(size = ~reprodAge, type = "scatter", mode = "markers", color = ~region) %>% add_markers(marker = list(line = list(color = "white", width = 1)))
j10
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 13000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1)))
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1)))
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
) %>%
add_trace(x = c(-20, 80), y = c(-20, 80), mode = "lines",
line = list(
color = "rgba(60, 60, 60, 0.5)",
dash = "dashed",
width = 0.5
), showlegend = FALSE)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
) %>%
add_trace(x = c(-20, 80), y = c(-20, 80)
,
line = list(
color = "rgba(60, 60, 60, 0.5)",
dash = "dashed",
width = 0.5
), showlegend = FALSE)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
) %>%
add_trace(x = c(-20, 80), y = c(-20, 80), mode = "lines",
line = list(
color = "rgba(60, 60, 60, 0.5)",
width = 0.5
), showlegend = FALSE)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
) %>%
add_trace(x = c(-20, 80), y = c(-20, 80), mode = "lines",
line = list(
color = "rgba(60, 60, 60, 0.5)",
dash = "dashed",
width = 0.5
), showlegend = FALSE)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1)))
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers"
) %>%
add_markers(marker = list(line = list(color = "white", width = 1)))
j1
levels(joinedData$region)
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 1)))
j1
p <- plot_ly(df, x = ~x, y = ~y, alpha = 0.3) %>%
add_markers(marker = list(line = list(color = "black", width = 1)))
p
p <- plot_ly(df, x = ~x, y = ~y, alpha = 0.3) %>%
add_markers(marker = list(line = list(color = "black", width = 0.5)))
p
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), type = "scatter", mode = "markers", color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria")
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 20000), type = "scatter", mode = "markers", color = ~region) %>%
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 20000), type = "scatter", mode = "markers", color = ~region)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 20000), type = "scatter", mode = "markers", line = list(color = "white", width = 0.5), color = ~region)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 20000), type = "scatter", mode = "markers") %>%
add_markers(marker = list(line = list(color = "white", width = 0.5)))
j1
?add_markers
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 20000), type = "scatter", mode = "markers") %>%
add_markers(marker = list(line = list(color = "white", width = 0.5)), inherit = F)
p <- plot_ly(df, x = ~x, y = ~y, alpha = 0.3) %>%
add_markers(marker = list(line = list(color = "black", width = 1)))
p
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5)), inherit = F)
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5)))
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
) %>%
add_trace(x = c(-20, 80), y = c(-20, 80), mode = "lines",
line = list(
color = "rgba(60, 60, 60, 0.5)",
dash = "dashed",
width = 0.5
), showlegend = FALSE)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), type = "scatter", sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
) %>%
add_trace(x = c(-20, 80), y = c(-20, 80), mode = "lines",
line = list(
color = "rgba(60, 60, 60, 0.5)",
dash = "dashed",
width = 0.5
), showlegend = FALSE)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), type = "scatter", sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = c(~paste("country: " = country), ~paste("size: " = reprodAge)), sizes = c(500, 15000), color = ~region)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: " = country), sizes = c(500, 15000), color = ~region)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = c(~paste("country: ", country), ~paste("size: ", reprodAge)) sizes = c(500, 15000), color = ~region) %>%
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: ", country), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste(("country: ", country), ("size: ", reprodAge)), sizes = c(500, 15000), color = ~region) %>%
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste(c("country: ", country), ("size: ", reprodAge)), sizes = c(500, 15000), color = ~region) %>%
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: ", country), text = ~paste("size: ", reprodAge) sizes = c(500, 15000), color = ~region) %>%
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: ", country), text = ~paste("size: ", reprodAge), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("size: ", reprodAge), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: ", country, "size: ", reprodAge), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: ", country, /n "size: ", reprodAge), sizes = c(500, 15000), color = ~region) %>%
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: ", country, \n "size: ", reprodAge), sizes = c(500, 15000), color = ~region) %>%
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: ", country, br/, "size: ", reprodAge), sizes = c(500, 15000), color = ~region) %>%
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: ", country, \n "size: ", reprodAge), sizes = c(500, 15000), color = ~region) %>%
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = ~paste("country: ", country, \n, "size: ", reprodAge), sizes = c(500, 15000), color = ~region) %>%
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, text = list(~paste("country: ", country), ~paste("size: ", reprodAge)), sizes = c(500, 15000), color = ~region) %>%
add_markers(marker = list(line = list(color = "white", width = 0.5))) %>%
dplyr::filter(country == "Nigeria") %>%
layout(annotations = list(x = ~maternalDeaths, y = ~maternalDeaths, text = "Nigeria", showarrow = FALSE),
xaxis = list(title = "maternal deaths (in thousands)"),
yaxis = list(title = "maternal deaths (in thousands)"),
title = "Maternal Mortality Ratio viz-a-viz population size"
)
help(package = plotly)
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, sizes = c(500, 15000), color = ~region) %>%
add_text(text = list(
text = ~paste("country: ", country),
text = ~paste("size: ", reprodAge)))%>%
add_markers(marker = list(line = list(color = "white", width = 0.5)))
library(plotly)
library(ggplot2)
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, sizes = c(500, 15000), color = ~region) %>%
add_text(text = list(
text = ~paste("country: ", country),
text = ~paste("size: ", reprodAge)))%>%
add_markers(marker = list(line = list(color = "white", width = 0.5)))
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, sizes = c(500, 15000), color = ~region) %>%
add_text(
~paste("country: ", country),
~paste("size: ", reprodAge))%>%
add_markers(marker = list(line = list(color = "white", width = 0.5)))
p <- plot_ly(economics, x = ~date, y = ~uempmed)
p
p %>% add_text(text = ".")
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, sizes = c(500, 15000), color = ~region) %>%
add_text(
~paste(text = "."))
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, sizes = c(500, 15000), color = ~region) %>%
add_text(text = ".")
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, sizes = c(500, 15000), color = ~region)
j1
j1 <- plot_ly(data = joinedData, x = ~maternalDeaths, y = ~maternalDeaths, size = ~reprodAge, sizes = c(500, 15000), color = ~region) %>%
add_text(text = ".")
j1
library(shiny); runApp('app2.R')
runApp()
runApp('C:/Users/stbal/Dropbox/github/stbalo2002/DevelopingDataProducts')
library(ggplot2)
?geom_histogram
runApp('C:/Users/stbal/Dropbox/github/stbalo2002/DevelopingDataProducts')
runApp('C:/Users/stbal/Dropbox/github/stbalo2002/DevelopingDataProducts')
runApp('C:/Users/stbal/Dropbox/github/stbalo2002/DevelopingDataProducts')
runApp('C:/Users/stbal/Dropbox/github/stbalo2002/DevelopingDataProducts')
a <- ggplot(data = data, aes(x = hp, y = mpg)) +
geom_point(color = I("darkblue"), size = 4, alpha = 1/5) +
geom_smooth(method = "lm", se = FALSE, size = 0.5, color = alpha("red", 0.5))
library(knitr)
library(ggplot2)
library(dplyr)
library(plotly)
library(dplyr)
library(tidyr)
library(shiny)
a <- ggplot(data = data, aes(x = hp, y = mpg)) +
geom_point(color = I("darkblue"), size = 4, alpha = 1/5) +
geom_smooth(method = "lm", se = FALSE, size = 0.5, color = alpha("red", 0.5))
lab <- labs(x = "horsepower", y = "miles per gallon", title = "Relationship between the miles per gallon consumed \n and the engine horsepower") +
theme_minimal()
a + lab
a
a <- ggplot(data = data, aes(x = hp, y = mpg)) +
geom_point(color = I("darkblue"), size = 4, alpha = 1/5) +
geom_smooth(method = "lm", se = FALSE, size = 0.5, color = alpha("red", 0.5))
a
library(knitr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(plotly)
library(shiny)
opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
data = mtcars
data$am <- factor(data$am,levels = c(0, 1), labels = c("automatic", "manual"))
a <- ggplot(data = data, aes(x = hp, y = mpg)) +
geom_point(color = I("darkblue"), size = 4, alpha = 1/5) +
geom_smooth(method = "lm", se = FALSE, size = 0.5, color = alpha("red", 0.5))
lab <- labs(x = "horsepower", y = "miles per gallon", title = "Relationship between the miles per gallon consumed \n and the engine horsepower") +
theme_minimal()
a + lab
ggplotly(a)
a <- ggplot(data = data, aes(x = hp, y = mpg)) +
geom_point(color = I("darkblue"), size = 4, alpha = 1/5) +
geom_smooth(method = "lm", se = FALSE, size = 0.5, color = alpha("red", 0.5))
lab <- labs(x = "horsepower", y = "miles per gallon", title = "Relationship between the miles per gallon consumed \n and the engine horsepower") +
theme_minimal()
a <- a + lab
ggplotly(a)
a <- a + lab
a
lab
lab <- function(x) {
labs(x = "horsepower", y = "miles per gallon", title = "Relationship between the miles per gallon consumed \n and the engine horsepower") +
theme_minimal()
}
a <- a + lab
lab <- labs(x = "horsepower", y = "miles per gallon", title = "Relationship between the miles per gallon consumed \n and the engine horsepower") +
theme_minimal()
a <- ggplot(data = data, aes(x = hp, y = mpg)) +
geom_point(color = I("darkblue"), size = 4, alpha = 1/5) +
geom_smooth(method = "lm", se = FALSE, size = 0.5, color = alpha("red", 0.5)) +
lab
a
lab <- labs(x = "horsepower", y = "miles per gallon", title = "Relationship between the miles per gallon consumed \n and the engine horsepower")
theme_m <- theme_minimal()
quiet <- c(lab, theme_m)
a <- ggplot(data = data, aes(x = hp, y = mpg)) +
geom_point(color = I("darkblue"), size = 4, alpha = 1/5) +
geom_smooth(method = "lm", se = FALSE, size = 0.5, color = alpha("red", 0.5)) +
quiet
a <- ggplot(data = data, aes(x = hp, y = mpg)) +
geom_point(color = I("darkblue"), size = 4, alpha = 1/5) +
geom_smooth(method = "lm", se = FALSE, size = 0.5, color = alpha("red", 0.5)) +
labs(x = "horsepower", y = "miles per gallon", title = "Relationship between the miles per gallon consumed \n and the engine horsepower") +
theme_m <- theme_minimal()
a <- ggplot(data = data, aes(x = hp, y = mpg)) +
geom_point(color = I("darkblue"), size = 4, alpha = 1/5) +
geom_smooth(method = "lm", se = FALSE, size = 0.5, color = alpha("red", 0.5)) +
labs(x = "horsepower", y = "miles per gallon", title = "Relationship between the miles per gallon consumed \n and the engine horsepower") +
theme_minimal()
slidify("index.Rmd")
library("slidify")
setwd("C:/Users/stbal/Dropbox/github/stbalo2002/DevelopingDataProducts/ddp")
library("slidify")
